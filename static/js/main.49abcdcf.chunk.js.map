{"version":3,"sources":["redux/favoriteCurrency/action.js","redux/favoriteCurrency/types.js","componentsHelper/CurrencyValue/CurrencyValue.jsx","components/CurrencyList/CurrencyList.jsx","redux/exchangeCurrency/actions.js","redux/exchangeCurrency/types.js","components/FavoriteCurrency/FavoriteCurrency.jsx","pages/CurrencyConvertorPage/CurrencyConvertorPage.jsx","components/ExchangeInput/ExchangeInput.jsx","components/ExchangeSelectCurrency/ExchangeSelectCurrency.jsx","components/ExchangeBlock/ExchangeBlock.jsx","pages/ExchangeRatePage/ExchangeRatePage.jsx","pages/ErrorPage/ErrorPage.jsx","App.jsx","redux/currency/action.js","redux/currency/types.js","redux/currency/reducer.js","redux/favoriteCurrency/reducer.js","redux/exchangeCurrency/reducer.js","redux/rootReducer.js","redux/store.js","index.js","App.module.css","components/ExchangeSelectCurrency/ExchangeSelectCurrency.module.css","componentsHelper/CurrencyValue/CurrencyValue.module.css","components/FavoriteCurrency/FavoriteCurrency.module.css","pages/ExchangeRatePage/ExchangeRatePage.module.css","components/ExchangeBlock/ExchangeBlock.module.css","components/ExchangeInput/ExchangeInput.module.css"],"names":["setFavoriteCurrency","currency","localStorage","setItem","JSON","stringify","type","payload","CurrencyValue","value","prev","code","currencyDiff","toFixed","toLowerCase","className","styles","bad","good","CurrencyList","dispatch","useDispatch","currencyList","useSelector","store","currencyReducer","favoriteCurrency","favoriteCurrencyReducer","TableContainer","component","Paper","Table","stickyHeader","aria-label","TableHead","TableRow","TableCell","align","TableBody","filter","CharCode","sort","a","list","includes","ID","map","multiply","curValue","Value","Nominal","curPrev","Previous","currencyRow","key","NumCode","Name","FormControlLabel","control","Checkbox","onChange","id","favoriteList","parse","getItem","index","indexOf","item","concat","changeFavoriteCurrency","checked","icon","checkedIcon","name","label","changeMainCurrency","changeBothCurrency","changeSecondCurrency","FavoriteCurrency","setFavoriteHandler","evt","favorite","target","style","container","text","FormControl","Select","length","displayEmpty","inputProps","MenuItem","CurrencyConvertorPage","ExchangeInput","changeHandler","readOnly","TextField","input","InputProps","fontSize","min","fullWidth","InputLabelProps","shrink","variant","ExchangeSelectCurrency","activeCur","changeCur","useState","isOpen","setOpen","popupRef","useRef","selectedIndex","setSelectedIndex","sorted","useMemo","slice","b","handlePopupClose","current","contains","ButtonGroup","size","buttons","color","button","Button","onClick","ref","prevOpen","Popper","open","anchorEl","role","undefined","transition","zIndex","TransitionProps","placement","Grow","transformOrigin","elevation","ClickAwayListener","onClickAway","MenuList","maxHeight","overflow","selected","handlePopupItemClick","ExchangeBlock","inputValue","inputValueHandler","ExchangeRatePage","exchangesCurrencies","exchangeCurrencyReducer","fromValue","changeFromValue","toValue","changeToValue","useEffect","rate","mainCurrency","secondCurrency","ErrorPage","links","path","App","location","useLocation","fetch","then","response","json","Object","values","Valute","StylesProvider","injectFirst","pathname","NavLink","to","exact","initialState","initialCurrency","combineReducers","state","action","console","log","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","basename","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.49abcdcf.chunk.js","sourcesContent":["import { SET_FAVORITE, CHANGE_FAVORITE_LIST } from './types.js';\n\nexport const setFavoriteCurrency = (currency) => {\n  localStorage.setItem('favoritesCur', JSON.stringify(currency));\n  \n  return {\n    type: SET_FAVORITE,\n    payload: currency,\n  }\n}\n\nexport const changeFavoriteCurrency = (id) => {\n  let favoriteList = JSON.parse(localStorage.getItem('favorites')) || [];\n  const index = favoriteList.indexOf(id);\n  if (index >= 0) {\n    favoriteList = favoriteList.filter((item) => item !== id);\n  } else {\n    favoriteList = favoriteList.concat(id);\n  }\n\n  localStorage.setItem('favorites', JSON.stringify(favoriteList));\n\n  return {\n    type: CHANGE_FAVORITE_LIST,\n    payload: favoriteList\n  }\n}\n","export const SET_FAVORITE = \"SET_FAVORITE\";\nexport const CHANGE_FAVORITE_LIST = \"CHANGE_FAVORITE_LIST\";","import React from 'react';\nimport styles from './CurrencyValue.module.css';\n\nexport function CurrencyValue({value, prev, code}) {\n\n  const currencyDiff = value - prev;\n\n  return (\n    <span>\n      {`${value.toFixed(2)} ${code.toLowerCase()} `}\n      <span className={currencyDiff >= 0 ? styles.bad : styles.good}>\n        ( {currencyDiff.toFixed(3)} )\n      </span>\n    </span>\n  )\n}\n\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { FormControlLabel, Checkbox } from '@material-ui/core';\nimport Favorite from '@material-ui/icons/Favorite';\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\nimport { changeFavoriteCurrency } from '../../redux/favoriteCurrency/action';\nimport { CurrencyValue } from '../../componentsHelper/CurrencyValue/CurrencyValue';\n\n\nexport function CurrencyList() {\n  const dispatch = useDispatch();\n  const currencyList = useSelector((store) => store.currencyReducer);\n  const favoriteCurrency = useSelector((store) => store.favoriteCurrencyReducer);\n\n  const calculateCurrency = (currency) => {\n    let multiply = 1;\n    const curValue = ((currency.Value / favoriteCurrency.currency.Value) / currency.Nominal * favoriteCurrency.currency.Nominal);\n    const curPrev = ((currency.Previous / favoriteCurrency.currency.Previous) / currency.Nominal * favoriteCurrency.currency.Nominal);\n    while ((curValue * multiply) < 1) {\n      multiply *= 10;\n    }\n    return {\n      ...currency,\n      Nominal: 1 * multiply,\n      Value: curValue * multiply,\n      Previous: curPrev * multiply,\n    }\n  }\n  \n\n  return (\n    <TableContainer component={Paper}>\n      <Table stickyHeader aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"left\">За</TableCell>\n            <TableCell align=\"left\">Букв. код</TableCell>\n            <TableCell align=\"left\">Валюта</TableCell>\n            <TableCell align=\"left\">Получаешь</TableCell>\n            <TableCell align=\"left\">Избранная</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {currencyList\n            .filter(currency => currency.CharCode !== favoriteCurrency.currency.CharCode)\n            .sort((a) => {\n            return favoriteCurrency.list.includes(a.ID) ? -1 : 1;\n          }).map(calculateCurrency)\n            .map((currencyRow) => (\n            <TableRow key={currencyRow.NumCode}>\n              <TableCell align=\"left\">{currencyRow.Nominal}</TableCell>\n              <TableCell align=\"left\">{currencyRow.CharCode}</TableCell>\n              <TableCell align=\"left\">{currencyRow.Name}</TableCell>\n              <TableCell align=\"left\">\n                <CurrencyValue prev={currencyRow.Previous} value={currencyRow.Value} code={favoriteCurrency.currency.CharCode}/>\n              </TableCell>\n              <TableCell align=\"center\">\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                        onChange={() => dispatch(changeFavoriteCurrency(currencyRow.ID))}\n                        checked={favoriteCurrency.list.includes(currencyRow.ID)}\n                        icon={<FavoriteBorder />}\n                        checkedIcon={<Favorite />}\n                        name={currencyRow.CharCode}\n                        label={currencyRow.CharCode}\n                    />\n                  }\n                />\n             </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n};\n\n","import { CHANGE_MAIN_CUR, CHANGE_SECOND_CUR, CHANGE_BOTH_CUR } from './types.js';\n\nexport const changeMainCurrency = (currency) => ({\n  type: CHANGE_MAIN_CUR,\n  payload: currency,\n});\n\nexport const changeBothCurrency = (currency) => ({\n  type: CHANGE_BOTH_CUR,\n  payload: currency,\n})\n\nexport const changeSecondCurrency = (currency) => ({\n  type: CHANGE_SECOND_CUR,\n  payload: currency,\n})","export const CHANGE_MAIN_CUR = \"CHANGE_MAIN_CUR\";\nexport const CHANGE_SECOND_CUR = \"CHANGE_SECOND_CUR\";\nexport const CHANGE_BOTH_CUR = \"CHANGE_BOTH_CUR\";","import React from 'react';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport style from './FavoriteCurrency.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { FormControl } from '@material-ui/core';\nimport { setFavoriteCurrency } from '../../redux/favoriteCurrency/action';\nimport { changeBothCurrency } from '../../redux/exchangeCurrency/actions';\n\n\nexport function FavoriteCurrency() {\n  const dispatch = useDispatch();\n  const currency = useSelector(store => store.currencyReducer)\n  const favoriteCurrency = useSelector((store) => store.favoriteCurrencyReducer);\n  \n  const setFavoriteHandler = (evt) => {\n    const favorite = currency.filter(item => (\n      item.CharCode === evt.target.value\n    ))\n    dispatch(setFavoriteCurrency(...favorite));\n    dispatch(changeBothCurrency(...favorite));\n  }\n\n  return (\n    <div className={style.container}>\n      <p className={style.text}> Базовая валюта : </p>\n      <FormControl >\n        <Select\n            value={currency.length > 1 ? favoriteCurrency.currency.CharCode : ''}\n            onChange={(evt) => setFavoriteHandler(evt)}\n            displayEmpty\n            // className={}\n            inputProps={{ 'aria-label': 'Without label' }}\n          >\n            {currency.map(item => (\n              <MenuItem key={item.NumCode} value={item.CharCode}>{item.Name}</MenuItem>\n            ))}\n\n          </Select>\n        </FormControl>\n    </div>\n  )\n};\n\n\n","import React from 'react';\nimport { CurrencyList } from '../../components/CurrencyList/CurrencyList.jsx';\nimport { FavoriteCurrency } from '../../components/FavoriteCurrency/FavoriteCurrency.jsx';\n\nexport function CurrencyConvertorPage() {\n\n  return (\n    <>\n      <FavoriteCurrency />\n      <CurrencyList />\n    </>\n  )\n}\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport styles from './ExchangeInput.module.css';\n\nexport function ExchangeInput({ value, changeHandler, readOnly, name }) {\n  return (\n    <>\n      <TextField\n        className={styles.input}\n        InputProps={{ \n          style: { fontSize: 40 },\n          inputProps: { min : 0 },\n          readOnly: readOnly\n        }}\n        fullWidth={true}\n        value={value}\n        onChange={(evt) => changeHandler(evt.target.value)}\n        id=\"outlined-number\"\n        label={name}\n        type=\"number\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n        variant=\"outlined\"\n      />\n      Сюда потом допишу\n    </>\n  )\n}\n","import React, { useMemo, useRef, useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport styles from './ExchangeSelectCurrency.module.css';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport { useSelector, useDispatch } from 'react-redux';\n\nconst BUTTONS_COUNT = 3;\n\nexport function ExchangeSelectCurrency({ activeCur, changeCur }) {\n  const [isOpen, setOpen]  = useState(false);\n  const currencyList = useSelector((store) => store.currencyReducer);\n  const favoriteCurrency = useSelector((store) => store.favoriteCurrencyReducer);\n  const popupRef = useRef(null);\n  const dispatch = useDispatch();\n  const [selectedIndex, setSelectedIndex] = useState(3);\n\n  const sorted = useMemo(() => currencyList.slice().sort((a, b) => {\n    if (a.ID === favoriteCurrency.currency.ID) return -1;\n    if (b.ID === favoriteCurrency.currency.ID) return 1;\n    if (favoriteCurrency.list.includes(a.ID) > favoriteCurrency.list.includes(b.ID)) return -1;\n    return 1;\n  }),[currencyList, favoriteCurrency])\n\n\n  const handlePopupToggle = () => {\n    setOpen((prevOpen) => !prevOpen)\n  }\n  \n  const handlePopupClose = (evt) => {\n    if (popupRef.current && popupRef.current.contains(evt.target)) {\n      return;\n    }\n\n    setOpen(false);\n  }\n\n  const handlePopupItemClick = (index) => {\n    setSelectedIndex(index);\n    dispatch(changeCur(sorted[index]))\n\n    setOpen(false);\n  }\n \n  return (\n    <>\n    <ButtonGroup\n      size=\"small\"\n      className={styles.buttons}\n      color=\"primary\"\n      aria-label=\"buttons\"\n    >\n      {sorted.slice(0, BUTTONS_COUNT).map((button, index) => (\n        <Button\n          onClick={() => {\n            dispatch(changeCur(button))\n          }}\n          key={index}\n          variant={button.ID === activeCur.ID ? \"contained\" : \"\"}\n          className={styles.button}\n        >\n          {button.CharCode}\n        </Button>\n      ))}\n      <Button \n        onClick={() => {\n          dispatch(changeCur(sorted[selectedIndex]))\n        }}\n        variant={sorted[selectedIndex] && sorted[selectedIndex].ID === activeCur.ID ? \"contained\" : \"\"}\n        className={styles.button}\n      >\n        {sorted.length > 1 && sorted[selectedIndex].CharCode}\n      </Button>\n      <Button\n        ref={popupRef}\n        onClick={handlePopupToggle}\n      >\n        {isOpen ? <ArrowDropUpIcon /> : <ArrowDropDownIcon />}\n      </Button>\n    </ButtonGroup>\n    <Popper \n      open={isOpen}\n      anchorEl={popupRef.current}\n      role={undefined}\n      transition\n      style={{ zIndex: 2}}\n    >\n      {({TransitionProps, placement}) => (\n        <Grow\n          {...TransitionProps}\n          style={{\n            transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom',\n          }}\n        >\n         <Paper elevation={3}>\n          <ClickAwayListener onClickAway={handlePopupClose}>\n            <MenuList\n              style={{ maxHeight: 450, overflow: 'auto'}}\n            >\n             {sorted.slice(BUTTONS_COUNT).map((item, index) => (\n                <MenuItem\n                  key={index}\n                  selected={item.ID === sorted[selectedIndex].ID}\n                  onClick={() => handlePopupItemClick(index + BUTTONS_COUNT)}\n                >\n                  {item.Name}\n                </MenuItem>\n             ))}\n            </MenuList>\n          </ClickAwayListener>\n         </Paper>\n        </Grow>\n      )}\n    </Popper>\n    </>\n  )\n}\n","import React from 'react';\nimport styles from './ExchangeBlock.module.css'\nimport { ExchangeInput } from '../ExchangeInput/ExchangeInput';\nimport { ExchangeSelectCurrency } from '../ExchangeSelectCurrency/ExchangeSelectCurrency';\n\nexport function ExchangeBlock({ inputValue, inputValueHandler, readOnly, name, activeCur, changeCur}) {\n  return (\n    <div className={styles.container}>\n      <ExchangeSelectCurrency\n        activeCur={activeCur}\n        changeCur={changeCur}\n      />\n\n      <ExchangeInput\n        name={name}\n        value={inputValue}\n        changeHandler={inputValueHandler}\n        readOnly={readOnly}\n      />\n    </div>\n  )\n}\n","import React from 'react';\nimport styles from './ExchangeRatePage.module.css';\nimport { ExchangeBlock } from '../../components/ExchangeBlock/ExchangeBlock';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeMainCurrency, changeSecondCurrency, changeBothCurrency } from '../../redux/exchangeCurrency/actions';\n\nexport function ExchangeRatePage() {\n  const dispatch = useDispatch();\n  const exchangesCurrencies = useSelector((store) => store.exchangeCurrencyReducer)\n  const favoriteCurrency = useSelector((store) => store.favoriteCurrencyReducer.currency)\n  const [fromValue, changeFromValue] = useState(0);\n  const [toValue, changeToValue] = useState(0);\n\n  useEffect(() => {\n    const rate = ((exchangesCurrencies.mainCurrency.Value / exchangesCurrencies.secondCurrency.Value) \n                / exchangesCurrencies.mainCurrency.Nominal * exchangesCurrencies.secondCurrency.Nominal)\n                * fromValue;\n            \n              \n    changeToValue(rate.toFixed(2));\n  }, [fromValue, exchangesCurrencies.mainCurrency.Value, exchangesCurrencies.secondCurrency.Value,\n    exchangesCurrencies.mainCurrency.Nominal, exchangesCurrencies.secondCurrency.Nominal])\n\n  \n  useEffect(() => {\n    dispatch(changeBothCurrency(favoriteCurrency));\n  },[favoriteCurrency, dispatch])\n\n  return (\n    <div className={styles.container}>\n      <ExchangeBlock \n        inputValue={fromValue}\n        inputValueHandler={changeFromValue}\n        name=\"Отдаешь\"\n        activeCur={exchangesCurrencies.mainCurrency}\n        changeCur={changeMainCurrency}\n      />\n      <ExchangeBlock\n        inputValue={toValue}\n        readOnly={true}\n        activeCur={exchangesCurrencies.secondCurrency}\n        name=\"Получаешь\"\n        changeCur={changeSecondCurrency}\n      />\n\n    </div>\n  )\n}\n\n","import React from 'react'\n\nexport function ErrorPage() {\n  return (\n    <div>\n      Ошибка. Нажмите на одну из кнопок сверху, для того что-бы перейти в соотвествующий раздел приложения.\n    </div>\n  )\n}\n","import React, { useEffect } from 'react';\nimport { CurrencyConvertorPage } from './pages/CurrencyConvertorPage/CurrencyConvertorPage';\nimport { StylesProvider } from '@material-ui/core/styles';\nimport { useDispatch } from \"react-redux\";\nimport { getCurrencyList } from './redux/currency/action.js';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport { Switch, NavLink, Route, useLocation } from \"react-router-dom\";\nimport styles from \"./App.module.css\";\nimport { ExchangeRatePage } from './pages/ExchangeRatePage/ExchangeRatePage';\nimport { ErrorPage } from './pages/ErrorPage/ErrorPage';\n\nconst links = [\n  {\n    name: \"Курс валют\",\n    path: \"/\",\n  },\n  {\n    name: \"Калькулятор валют\",\n    path: \"/calc\"\n  }\n]\n\nfunction App() {\n  const location = useLocation();\n  \n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getCurrencyList());\n  }, [dispatch])\n\n\n  return (\n    <StylesProvider injectFirst>\n      <div className={styles.container}>\n        <ButtonGroup className={styles.buttons} size=\"large\" color=\"primary\" aria-label=\"large outlined primary button group\">\n          {links.map((button, index) => (\n            <Button\n              variant={button.path === location.pathname ? \"contained\" : \"\"}\n              className={styles.button}\n              key={index}\n              component={NavLink}\n              to={button.path}\n            >\n              {button.name}\n            </Button>\n          ))}\n        </ButtonGroup>\n          \n        <Switch>\n          <Route exact path=\"/\">\n           <CurrencyConvertorPage />\n          </Route>\n          <Route exact path=\"/calc\">\n            <ExchangeRatePage />\n          </Route>\n          <Route path=\"*\">\n            <ErrorPage />\n          </Route>\n        </Switch>\n      </div>\n    </StylesProvider>\n  );\n}\n\nexport default App;\n","import { GET_CURRENCY } from \"./types.js\";\n\nconst setCurrencyList = (currencyList) => ({\n  type: GET_CURRENCY,\n  payload: currencyList,\n})\n\nexport const getCurrencyList = () => (dispatch) => {\n  fetch('https://www.cbr-xml-daily.ru/daily_json.js')\n    .then((response) => response.json())\n    .then((item) => dispatch(\n      setCurrencyList(Object.values(item.Valute))\n    ));\n}\n\n","export const GET_CURRENCY = \"GET_CURRENCY\";\n","import { GET_CURRENCY } from \"./types.js\";\n\nconst initialState = [{\n  \"ID\": \"R01\",\n  \"NumCode\": \"643\",\n  \"CharCode\": \"RUB\",\n  \"Nominal\": 1,\n  \"Name\": \"Российский рубль\",\n  \"Value\": 1.0,\n  \"Previous\": 1.0\n}];\n\nexport const currencyReducer = (state = initialState, action) => {\n  switch ( action.type ) {\n    case GET_CURRENCY: \n      return [...state, ...action.payload];\n    default:\n      return state;\n  }\n}","import { SET_FAVORITE, CHANGE_FAVORITE_LIST } from './types.js';\n\nconst initialCurrency = JSON.parse(localStorage.getItem('favoritesCur')) || {\n  \"ID\": \"R01\",\n  \"NumCode\": \"643\",\n  \"CharCode\": \"RUB\",\n  \"Nominal\": 1,\n  \"Name\": \"Российский рубль\",\n  \"Value\": 1.00,\n  \"Previous\": 1.00\n}\n\nconst initialState = {\n  currency: initialCurrency,\n  list: JSON.parse(localStorage.getItem('favorites')) || [],\n};\n\nexport const favoriteCurrencyReducer = (state = initialState, action) => {\n  switch ( action.type ) {\n    case SET_FAVORITE: \n      return { ...state, currency: action.payload }\n    case CHANGE_FAVORITE_LIST:\n      return { ...state, list: action.payload}\n    default:\n      return state;\n  }\n}","import { CHANGE_MAIN_CUR, CHANGE_SECOND_CUR, CHANGE_BOTH_CUR } from './types.js';\n\nconst initialCurrency = JSON.parse(localStorage.getItem('favoritesCur')) || {\n  \"ID\": \"R01\",\n  \"NumCode\": \"643\",\n  \"CharCode\": \"RUB\",\n  \"Nominal\": 1,\n  \"Name\": \"Российский рубль\",\n  \"Value\": 1.00,\n  \"Previous\": 1.00\n}\n\nconst initialState = {\n  mainCurrency: initialCurrency,\n  secondCurrency: initialCurrency\n}\n\nexport const exchangeCurrencyReducer = (state = initialState, action) => {\n  switch ( action.type ) {\n    case CHANGE_MAIN_CUR:\n      console.log(action)\n      return { ...state, mainCurrency: action.payload };\n    case CHANGE_SECOND_CUR:\n      return { ...state, secondCurrency: action.payload };\n    case CHANGE_BOTH_CUR:\n      return {...state, mainCurrency: action.payload, secondCurrency: action.payload}\n    default:\n      return state;\n  }\n}","import { combineReducers } from \"redux\";\nimport { currencyReducer } from \"./currency/reducer.js\";\nimport { favoriteCurrencyReducer } from \"./favoriteCurrency/reducer.js\";\nimport { exchangeCurrencyReducer } from \"./exchangeCurrency/reducer.js\";\n\nexport default combineReducers({\n  currencyReducer,\n  favoriteCurrencyReducer,\n  exchangeCurrencyReducer,\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./rootReducer\";\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter basename=\"/ExchangeRates\">\n      <App />\n    </BrowserRouter>\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2JWie\",\"buttons\":\"App_buttons__SueQk\",\"button\":\"App_button__3IwCJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons\":\"ExchangeSelectCurrency_buttons__3WhmR\",\"button\":\"ExchangeSelectCurrency_button__2fp77\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"good\":\"CurrencyValue_good__1zknA\",\"bad\":\"CurrencyValue_bad__34OVM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FavoriteCurrency_container__14pKF\",\"text\":\"FavoriteCurrency_text__3yjQ9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ExchangeRatePage_container__20nG3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ExchangeBlock_container__3DfrB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ExchangeInput_input__1txvD\"};"],"sourceRoot":""}